/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Prinavu (https://sketchfab.com/Prinavu)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/floating-fox-497de71996cf4f4d86e387028938aceb
Title: Floating Fox
*/

import React, { useEffect,useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import floatingFox from '../assets/3d/floating_fox.glb';
import { useFrame } from '@react-three/fiber';


const FloatingFox =({isRotating, ...props}) => {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF(floatingFox);
    const { actions } = useAnimations(animations, group);
  
    useEffect(() => {

        const firstAnim = animations[0]?.name;
        if (firstAnim && actions[firstAnim]) {
          actions[firstAnim].play();
        }

        Object.values(materials).forEach((mat) => {
            if (mat && mat.isMeshStandardMaterial) {
              mat.emissiveIntensity = 0.05;
              mat.metalness = 0.05;
              mat.roughness = 0.05;
            }
          });
      
        return () => {
          if (firstAnim && actions[firstAnim]) {
            actions[firstAnim].stop();
          }
        };
      }, [animations, actions, materials]);
  
      
    useFrame(({ clock }) => {
        
      if (group.current) {
        group.current.position.y = Math.sin(clock.elapsedTime * 2) * 0.2 + 2; 

      }
    });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene" position={[0, -3, -10]} >
        <group name="Sketchfab_model">
          <group name="root">
            <group name="GLTF_SceneRootNode" >
              <group name="Star001_1">
                <mesh
                  name="Object_4"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_4.geometry}
                  material={materials['Material.007']}
                />
                <mesh
                  name="Object_5"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_5.geometry}
                  material={materials['Material.010']}
                />
                <mesh
                  name="Object_6"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_6.geometry}
                  material={materials['Material.011']}
                />
              </group>
              <group name="Star004_2">
                <mesh
                  name="Object_8"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_8.geometry}
                  material={materials['Material.012']}
                />
                <mesh
                  name="Object_9"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_9.geometry}
                  material={materials['Material.013']}
                />
              </group>
              <group name="Cube_3">
                <mesh
                  name="Object_11"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_11.geometry}
                  material={materials.Material}
                />
                <mesh
                  name="Object_12"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_12.geometry}
                  material={materials['Material.002']}
                />
                <mesh
                  name="Object_13"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_13.geometry}
                  material={materials['Material.005']}
                />
                <mesh
                  name="Object_14"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_14.geometry}
                  material={materials['Material.005']}
                />
                <mesh
                  name="Object_15"
                  castShadow
                  receiveShadow
                  geometry={nodes.Object_15.geometry}
                  material={materials['Material.003']}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/floating_fox.glb')
export default FloatingFox